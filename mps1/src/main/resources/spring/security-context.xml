<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
  	
	
    <http auto-config="true" use-expressions="true" create-session="never">
    	<access-denied-handler error-page="/login"/>
    	<form-login login-page="/login" default-target-url="/main" authentication-failure-url="/login?login=fail" />
    	<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="filterSecurityInterceptor"/>
    	
    	<session-management>
        	<concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
    	</session-management>
    </http>
    
    <authentication-manager>
    	<authentication-provider user-service-ref="userDetailDaoImpl" >
    		<password-encoder ref="bcryptPasswordEncoder" />
    	</authentication-provider>
    </authentication-manager>
    
    <beans:bean id="userDetailDaoImpl" class="com.bigcho.mps.support.security.jdbc.UserDetailDaoImpl">
    	<beans:property name="dataSource" ref="dataSource" />
    	<beans:property name="rolePrefix" value="" />
    	<beans:property name="usersByUsernameQuery" value="SELECT userId, id, password, name FROM tbl_user WHERE id=?" />
    	<beans:property name="authoritiesByUsernameQuery" value="SELECT authorityCode FROM tbl_user_authority WHERE userId=?" />
    	<beans:property name="enableGroups" value="false" />
    </beans:bean>
    
    <beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
    
    <beans:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
    	<beans:property name="authenticationManager" ref="org.springframework.security.authenticationManager" />
    	<beans:property name="accessDecisionManager" ref="accessDecisionManager" />
    	<beans:property name="securityMetadataSource" ref="reloadableFilterInvocationSecurityMetadataSource" />
    </beans:bean>
    
    <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
    	<beans:constructor-arg>
    		<beans:list>
    			<beans:bean class="org.springframework.security.access.vote.RoleVoter">
    				<beans:property name="rolePrefix" value="" />
    			</beans:bean>
    		</beans:list>
    	</beans:constructor-arg>
    </beans:bean>
    
    <beans:bean id="reloadableFilterInvocationSecurityMetadataSource" class="com.bigcho.mps.support.security.intercept.ReloadableFilterInvocationSecurityMetadataSource" >
    	<beans:constructor-arg ref="requestMap" />
    	<beans:property name="securedObjectService" ref="securedObjectService" />
    </beans:bean>
    
    <beans:bean id="securedObjectService" class="com.bigcho.mps.support.security.securedobject.SecuredObjectServiceImpl">
    	<beans:property name="securedObjectDao" ref="securedObjectDao" />
    </beans:bean>
    
    <beans:bean id="securedObjectDao" class="com.bigcho.mps.support.security.securedobject.SecuredObjectDao">
    	<beans:property name="dataSource" ref="dataSource" />
    	<beans:property name="sqlRolesAndUrl" value="
    		SELECT a.pattern url, b.authorityCode
			FROM tbl_secure_resource a, tbl_secure_resource_authority b
			WHERE a.resourceId = b.resourceId
			AND a.type = 'url'
			ORDER BY a.sortOrder" />
    </beans:bean>
    
	<beans:bean id="requestMap" class="com.bigcho.mps.support.security.intercept.UrlResourcesMapFactoryBean" init-method="init">
		<beans:property name="securedObjectService" ref="securedObjectService" />
	</beans:bean>

</beans:beans>