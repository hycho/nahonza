<?xml version="1.0" encoding="UTF-8" ?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
			http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- JNDI DataSource for JEE environments -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:/comp/env/jdbc/mps" />
	</bean>

<!-- spring data jpa 설정 -->
	<!-- jpa repository가 위치한 패키지 경로 등록 -->
	<jpa:repositories base-package="com.bigcho.mps" entity-manager-factory-ref="entityManagerFactory" />

	<!-- 하이버네이트의 SessionFactory 에 상응하는 jpa의 EntityManagerFactory 등록 -->
	<bean id="entityManagerFactory"	class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="dataSource" ref="dataSource" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop><!-- Mysql 형식에 맞게 변환해주는 클래스 -->
				<prop key="hibernate.connection.pool_size">3</prop>
				<prop key="hibernate.connection.shutdown">true</prop><!-- hsql에 있는 마지막 연결이 끊어지면 데이터베이스 shutdown 하는 플래그 -->
				<prop key="hibernate.show_sql">true</prop> <!-- SQL 출력 -->
				<prop key="hibernate.hbm2ddl.auto">validation</prop> <!-- 테이블 자동 생성 -->
			</props>
		</property>
		
		<!-- 엔티티 정의된 클래스들이 있는 패키지 등록 -->
		<property name="packagesToScan" value="com.bigcho.mps" />
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>
<!-- spring data jpa 설정 끝 -->

</beans>
